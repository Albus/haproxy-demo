global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend foo_ft_https
	log	global
  mode tcp
  option tcplog
  bind 0.0.0.0:443

  tcp-request inspect-delay 5s
  tcp-request content accept if { req.ssl_hello_type 1 }

	# acl foo_proto_not_https req.ssl_sni -m found
	acl foo_proto_ssh payload(0,7) -m bin 5353482d322e30 # "SSH-2.0" in hex
  # tcp-request content accept if foo_proto_ssh

  acl foo_proto_ovpn req.ssl_sni -i vnet.example.com
  use_backend foo_bk_ovpn if foo_proto_ovpn

  acl foo_proto_pvpn req.ssl_sni -i pnet.example.com
  use_backend foo_proxy_pvpn if foo_proto_pvpn

  acl foo_proto_sslh req.ssl_sni -i shell.example.com
  use_backend foo_proxy_sslh if foo_proto_sslh

  acl foo_app_bar req.ssl_sni -i bar.example.com
  acl foo_app_baz req.ssl_sni -i baz.example.com

  use_backend foo_bk_ssh if foo_proto_ssh

  use_backend foo_bk_bar if foo_app_bar
  use_backend foo_bk_baz if foo_app_baz

  #acl foo_app_letsencrypt req.ssl_sni -i subdomain.example.com
  acl foo_app_letsencrypt req.ssl_sni -i *.acme.invalid
  use_backend foo_bk_letsencrypt if foo_app_letsencrypt

  default_backend foo_bk_default


# HTTPS SNI

backend foo_bk_default
	log	global
  mode tcp
  option tcplog

  server foo_srv_default 127.0.0.1:1443

backend foo_bk_letsencrypt
	log	global
  mode tcp
  option tcplog

  server foo_srv_letsencrypt 127.0.0.1:63443

backend foo_bk_bar
	log	global
  mode tcp
  option tcplog

  server foo_srv_bar 127.0.0.1:2443

backend foo_bk_baz
	log	global
  mode tcp
  option tcplog

  server foo_srv_baz 127.0.0.1:3443

# OVPN
backend foo_bk_ovpn
	log	global
  mode tcp
  option tcplog

	timeout server 15m
  server foo_srv_default 127.0.0.1:1194

# OVPN-over-HTTPS
frontend foo_ft_pvpn
	mode tcp
  option tcplog
  bind 127.0.0.1:11443 ssl crt /etc/haproxy/certs/servers/pnet.example.com/server.pem accept-proxy

  use_backend foo_bk_ovpn

backend foo_proxy_pvpn
  mode tcp
  option tcplog

  #timeout server 2h
  server foo_srv_sslh 127.0.0.1:11443 send-proxy

# SSH
backend foo_bk_ssh
	log	global
  mode tcp
  option tcplog

	timeout server 2h
  server foo_srv_default 127.0.0.1:22

# SSH-over-HTTPS
frontend foo_ft_sslh
	mode tcp
  option tcplog
  bind 127.0.0.1:22443 ssl crt /etc/haproxy/certs/servers/shell.example.com/server.pem accept-proxy

  use_backend foo_bk_sslh

backend foo_bk_sslh
  mode tcp
  option tcplog

  #timeout server 2h
  server foo_srv_ssl 127.0.0.1:22

backend foo_proxy_sslh
  mode tcp
  option tcplog

  #timeout server 2h
  server foo_srv_sslh 127.0.0.1:22443 send-proxy
